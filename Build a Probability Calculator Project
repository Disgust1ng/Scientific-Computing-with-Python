import copy
import random

class Hat:
    def __init__(self, **kwargs):
        self.contents = []
        for colour, count in kwargs.items():
            self.contents.extend([colour] * count)
        
    def draw(self, num_balls_drawn):
        if num_balls_drawn >= len(self.contents):
            drawn = self.contents.copy()
            self.contents.clear()
            return drawn

        drawn = random.sample(self.contents, num_balls_drawn)
        for ball in drawn:
            self.contents.remove(ball)
        return drawn

def experiment(hat, expected_balls, num_balls_drawn, num_experiments):

    counter = 0
    
    for _ in range(num_experiments):
        hat_copy = copy.deepcopy(hat)
        drawn_balls = hat_copy.draw(num_balls_drawn)

        drawn_counts = {}
        for ball in drawn_balls:
            drawn_counts[ball] = drawn_counts.get(ball, 0) + 1

        success = True
        for colour, count in expected_balls.items():
            if drawn_counts.get(colour, 0) < count:
                success = False
                break
            
        if success:
            counter += 1

    return counter / num_experiments

hat = Hat(red=3, blue=1)
print("Before:", hat.contents)
drawn = hat.draw(2)
print("Drawn:", drawn)
print("After:", hat.contents)